{"ast":null,"code":"var _jsxFileName = \"/Users/faheeemsajjad/personal/Dynamic-Navigation-Flow/react native/navigation flow/web/src/views/ScreenA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Loader from '../components/Loader';\nimport { getExperiments } from '../actions/experiments.js';\nimport ScreenB1 from './ScreenB1';\nimport ScreenB2 from './ScreenB2';\nimport ScreenB3 from './ScreenB3'; // import NoScreenB from './NoScreenB';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ScreenA() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [showLoader, setShowLoader] = useState(false);\n  const [nextScreen, setNextScreen] = useState(\"\");\n\n  const experimentsHandler = () => {\n    setShowLoader(true);\n    dispatch(getExperiments()).then(response => {\n      setShowLoader(false);\n      setNextScreen(response);\n    });\n  };\n\n  if (nextScreen) {\n    switch (nextScreen) {\n      case 'screenB1':\n        return /*#__PURE__*/_jsxDEV(ScreenB1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n\n      case 'screenB2':\n        return /*#__PURE__*/_jsxDEV(ScreenB2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n\n      case 'screenB3':\n        return /*#__PURE__*/_jsxDEV(ScreenB3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this);\n\n      case 'noScreenB':\n        return /*#__PURE__*/_jsxDEV(ScreenC2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Default Error\"\n        }, void 0, false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showLoader ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Screen A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        onClick: experimentsHandler,\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ScreenA, \"dmb6fGqLCOB4eNHUR5tsUrwaqZ8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ScreenA;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenA\");","map":{"version":3,"names":["React","useState","useDispatch","Loader","getExperiments","ScreenB1","ScreenB2","ScreenB3","ScreenA","dispatch","showLoader","setShowLoader","nextScreen","setNextScreen","experimentsHandler","then","response"],"sources":["/Users/faheeemsajjad/personal/Dynamic-Navigation-Flow/react native/navigation flow/web/src/views/ScreenA.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Loader from '../components/Loader';\n\nimport { getExperiments } from '../actions/experiments.js'\nimport ScreenB1 from './ScreenB1';\nimport ScreenB2 from './ScreenB2';\nimport ScreenB3 from './ScreenB3';\n// import NoScreenB from './NoScreenB';\n\nexport default function ScreenA() {\n    \n    const dispatch = useDispatch();\n    const [showLoader , setShowLoader]  = useState(false)\n    const [nextScreen, setNextScreen] = useState(\"\");\n\n    const experimentsHandler = () => {\n        setShowLoader(true);\n        dispatch(getExperiments()).then(response => {\n            setShowLoader(false);\n            setNextScreen(response)\n        })\n    }\n\n    if(nextScreen){\n        switch(nextScreen){\n            case 'screenB1':\n                return <ScreenB1 />\n            case 'screenB2':\n                return <ScreenB2 />\n            case 'screenB3':\n                return <ScreenB3 />\n            case 'noScreenB':\n                return <ScreenC2 />\n            default:\n                return <>Default Error</>\n        }\n    }\n\n    return (\n      <div>\n        {\n            !showLoader ? (\n                <>\n                    <h1>Screen A</h1>  \n                    <input type=\"button\" onClick={experimentsHandler} value=\"Submit\"/>\n                </>\n            ) : <Loader />\n        }\n      </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAE9B,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM,CAACQ,UAAD,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMa,kBAAkB,GAAG,MAAM;IAC7BH,aAAa,CAAC,IAAD,CAAb;IACAF,QAAQ,CAACL,cAAc,EAAf,CAAR,CAA2BW,IAA3B,CAAgCC,QAAQ,IAAI;MACxCL,aAAa,CAAC,KAAD,CAAb;MACAE,aAAa,CAACG,QAAD,CAAb;IACH,CAHD;EAIH,CAND;;EAQA,IAAGJ,UAAH,EAAc;IACV,QAAOA,UAAP;MACI,KAAK,UAAL;QACI,oBAAO,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ,KAAK,UAAL;QACI,oBAAO,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ,KAAK,UAAL;QACI,oBAAO,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ,KAAK,WAAL;QACI,oBAAO,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAAP;;MACJ;QACI,oBAAO;UAAA;QAAA,iBAAP;IAVR;EAYH;;EAED,oBACE;IAAA,UAEM,CAACF,UAAD,gBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,EAAEI,kBAA9B;QAAkD,KAAK,EAAC;MAAxD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA,gBADJ,gBAKI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA;EAPV;IAAA;IAAA;IAAA;EAAA,QADF;AAYH;;GAzCuBN,O;UAEHN,W;;;KAFGM,O"},"metadata":{},"sourceType":"module"}