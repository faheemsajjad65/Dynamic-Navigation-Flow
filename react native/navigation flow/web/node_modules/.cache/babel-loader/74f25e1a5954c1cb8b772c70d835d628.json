{"ast":null,"code":"import expService from '../services/experiments.service';\nexport const getExperiments = () => dispatch => {\n  dispatch({\n    type: 'GET_EXPERIMENTS_INIT'\n  });\n  return expService.fetchExperiments(filters).then(response => {\n    dispatch({\n      type: \"GET_EXPERIMENTS_SUCCESS\",\n      payload: response.data\n    });\n    return Promise.resolve(response.data);\n  }).catch(err => {\n    dispatch({\n      type: 'CASES_GET_ERROR',\n      payload: err.response.data\n    });\n    return Promise.reject(err);\n  });\n};","map":{"version":3,"names":["expService","getExperiments","dispatch","type","fetchExperiments","filters","then","response","payload","data","Promise","resolve","catch","err","reject"],"sources":["/Users/faheeemsajjad/personal/Dynamic-Navigation-Flow/react native/navigation flow/web/src/actions/experiments.js"],"sourcesContent":["import expService from '../services/experiments.service'\n\nexport const getExperiments = () => dispatch => {\n    dispatch({\n        type: 'GET_EXPERIMENTS_INIT'\n    });\n    return expService\n        .fetchExperiments(filters)\n        .then(response => {\n            dispatch({\n                type:\"GET_EXPERIMENTS_SUCCESS\",\n                payload:response.data\n            })\n            return Promise.resolve(response.data);\n        })\n        .catch(err => {\n            dispatch({\n                type: 'CASES_GET_ERROR',\n                payload:err.response.data\n            });\n\n            return Promise.reject(err);\n        })\n}\n\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iCAAvB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;EAC5CA,QAAQ,CAAC;IACLC,IAAI,EAAE;EADD,CAAD,CAAR;EAGA,OAAOH,UAAU,CACZI,gBADE,CACeC,OADf,EAEFC,IAFE,CAEGC,QAAQ,IAAI;IACdL,QAAQ,CAAC;MACLC,IAAI,EAAC,yBADA;MAELK,OAAO,EAACD,QAAQ,CAACE;IAFZ,CAAD,CAAR;IAIA,OAAOC,OAAO,CAACC,OAAR,CAAgBJ,QAAQ,CAACE,IAAzB,CAAP;EACH,CARE,EASFG,KATE,CASIC,GAAG,IAAI;IACVX,QAAQ,CAAC;MACLC,IAAI,EAAE,iBADD;MAELK,OAAO,EAACK,GAAG,CAACN,QAAJ,CAAaE;IAFhB,CAAD,CAAR;IAKA,OAAOC,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;EACH,CAhBE,CAAP;AAiBH,CArBM"},"metadata":{},"sourceType":"module"}